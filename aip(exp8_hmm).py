# -*- coding: utf-8 -*-
"""AIP(exp8-HMM).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ccEwgSTs3jvxV9B1jc9lD9l8G8BAbXuz
"""

observations = ("I", "will", "study", "very", "hard", "for", "the", "final", "examination", "in", "artificial", "intelligence", "in", "practice")
states = ("PRP", "MD", "VB", "JJ", "NN", "RB", "IN", "DT")
start_p = {"PRP": 0.2767, "MD": 0.0006, "VB":0.0031, "JJ":0.0453, "NN":0.0449, "RB":0.051, "IN":0.081, "DT":0.2026}
trans_p = {
    "PRP": {"PRP":0.3777, "MD":0.011, "VB":0.0009, "JJ":0.0084, "NN":0.0584, "RB":0.009, "IN":0.007, "DT":0.0025},
    "MD": {"PRP":0.0008, "MD":0.0002, "VB":0.7968, "JJ":0.0005, "NN":0.0008, "RB":0.1698, "IN":0.036, "DT":0.0041},
    "JJ": {"PRP":0.0366, "MD":0.0004, "VB":0.0001, "JJ":0.0733, "NN":0.4509, "RB":0.0036, "IN":0.186, "DT":0.0036},
    "VB": {"PRP":0.0322, "MD":0.0005, "VB":0.0050, "JJ":0.0837, "NN":0.0615, "RB":0.0514, "IN":0.193, "DT":0.2231},
    "NN": {"PRP":0.0096, "MD":0.0176, "VB":0.0014, "JJ":0.0086, "NN":0.1216, "RB":0.0177, "IN":0.245, "DT":0.0068},
    "RB": {"PRP":0.0068, "MD":0.0102, "VB":0.1011, "JJ":0.1012, "NN":0.012, "RB":0.0728, "IN":0.254, "DT":0.0479},
    "IN": {"PRP":0.0001, "MD":0.0001, "VB":0.0001, "JJ":0.4997, "NN":0.0001, "RB":0.0001, "IN":0.0001, "DT":0.4997},
    "DT": {"PRP":0.1147, "MD":0.0021, "VB":0.0002, "JJ":0.2157, "NN":0.4744, "RB":0.0102, "IN":0.0001, "DT":0.0017}
}
emit_p = {
    #"I": {"PRP":0.032, "MD":0, "VB":0, "JJ":0, "NN":0, "RB":0, "IN":0, "DT":0},
    #"will": {"PRP":0, "MD":0.308431, "VB":0.000028, "JJ":0, "NN":0.0002, "RB":0, "IN":0, "DT":0},
    #"study": {"PRP":0, "MD":0, "VB":0.00672, "JJ":0, "NN":0.000223, "RB":0, "IN":0, "DT":0},
    #"very": {"PRP":0, "MD":0, "VB":0, "JJ":0, "NN":0, "RB":0.010446, "IN":0, "DT":0},
    #"hard": {"PRP":0, "MD":0, "VB":0, "JJ":0, "NN":0, "RB":0.010446, "IN":0.00201, "DT":0},
    #"for": {"PRP":0, "MD":0, "VB":0, "JJ":0, "NN":0, "RB":0.000213, "IN":0.00201, "DT":0},
    #"the": {"PRP":0.000007, "MD":0, "VB":0, "JJ":0, "NN":0, "RB":0, "IN":0, "DT":0.5061},
    #"final": {"PRP":0, "MD":0, "VB":0, "JJ":0.002337, "NN":0.000028, "RB":0, "IN":0, "DT":0},
    #"examination": {"PRP":0, "MD":0, "VB":0.000018, "JJ":0, "NN":0.001282, "RB":0, "IN":0, "DT":0},
    #"in": {"PRP":0, "MD":0, "VB":0, "JJ":0, "NN":0.000028, "RB":0, "IN":0.0028, "DT":0},
    #"natural": {"PRP":0, "MD":0, "VB":0, "JJ":0.000384, "NN":0.000172, "RB":0, "IN":0, "DT":0},
    #"language": {"PRP":0, "MD":0, "VB":0, "JJ":0, "NN":0.000172, "RB":0, "IN":0, "DT":0},
    #"processing": {"PRP":0, "MD":0, "VB":0.000098, "JJ":0, "NN":0.000087, "RB":0, "IN":0, "DT":0},
    "PRP": {"I":0.032, "will":0, "study":0, "very":0, "hard":0, "for":0, "the":0.000007, "final":0, "examination":0, "in":0, "artificial":0, "intelligence":0,  "practice":0},
    "MD": {"I":0, "will":0.308431, "study":0, "very":0, "hard":0, "for":0, "the":0, "final":0, "examination":0, "in":0, "artificial":0, "intelligence":0,  "practice":0},
    "JJ": {"I":0, "will":0, "study":0, "very":0, "hard":0, "for":0, "the":0, "final":0.002337, "examination":0, "in":0, "artificial":0.000384, "intelligence":0,  "practice":0},
    "VB": {"I":0, "will":0.000028, "study":0.00672, "very":0, "hard":0, "for":0, "the":0, "final":0, "examination":0.000018, "in":0, "artificial":0, "intelligence":0,  "practice":0.000098},
    "NN": {"I":0, "will":0.0002, "study":0.000223, "very":0, "hard":0, "for":0, "the":0, "final":0.000028, "examination":0.001282, "in":0.000028, "artificial":0.000172, "intelligence":0.000172,  "practice":0.000087},
    "RB": {"I":0, "will":0, "study":0, "very":0.010446, "hard":0.010446, "for":0.000213, "the":0, "final":0, "examination":0, "in":0, "artificial":0, "intelligence":0,  "practice":0},
    "DT": {"I":0, "will":0, "study":0, "very":0, "hard":0, "for":0, "the":0.5061, "final":0, "examination":0, "in":0, "artificial":0, "intelligence":0,  "practice":0},
    "IN": {"I":0, "will":0, "study":0, "very":0, "hard":0.00201, "for":0.00201, "the":0, "final":0, "examination":0, "in":0.0028, "artificial":0, "intelligence":0,  "practice":0}
}

def viterbi_algorithm(observations, states, start_p, trans_p, emit_p):
  V = [{}]
  for st in states:
    V[0][st] = {"prob": start_p[st] * emit_p[st][observations[0]], "prev": None}
  for t in range(1, len(observations)):
    V.append({})
    for st in states:
      max_tr_prob = V[t - 1][states[0]]["prob"] * trans_p[states[0]][st]
      prev_st_selected = states[0]
      for prev_st in states[1:]:
        tr_prob = V[t - 1][prev_st]["prob"] * trans_p[prev_st][st]
        if tr_prob > max_tr_prob:
          max_tr_prob = tr_prob
          prev_st_selected = prev_st

        max_prob = max_tr_prob * emit_p[st][observations[t]]
        V[t][st] = {"prob": max_prob, "prev": prev_st_selected}
    for line in dptable(V):
      print(line)
    opt = []
    max_prob = 0.0
    best_st = None

    for st, data in V[-1].items():
      if data["prob"] > max_prob:
        max_prob = data["prob"]
        best_st = st
    opt.append(best_st)
    previous = best_st


    for t in range(len(V) - 2, -1, -1):
        opt.insert(0, V[t + 1][previous]["prev"])
        previous = V[t + 1][previous]["prev"]

    print ("The steps of states are " + " ".join(opt) + " with highest probability of %s" % max_prob)

    print ("Printing V:")
    print(V)


def dptable(V):

    yield " ".join(("%12d" % i) for i in range(len(V)))
    for state in V[0]:
        yield "%.7s: " % state + " ".join("%.9s" % ("%.2e" % v[state]["prob"]) for v in V)

#viterbi_algorithm(observations, states, start_p, trans_p, emit_p)

viterbi_algorithm(observations, states, start_p, trans_p, emit_p)